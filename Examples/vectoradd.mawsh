#!/usr/bin/mawsh
#include <mawsh.cl>

// Colloquial hello building on hello2.mawsh
void kernel hello(global mawproc* p)
{
	printmc(&p->out, "Hi! We're adding vectors.\n");
}

// Bad example - single work item for loop.
void kernel vectoradd(constant int *a, constant int *b, global int *c)
{
	for (int i = 0; i < 1024; ++i)
		c[i] = a[i] + b[i];
}

// Super basic parallel vector addition example
// Adapted from Erik Smistad.
// https://www.eriksmistad.no/getting-started-with-opencl-and-gpu-computing/
void kernel vectoradd_1024(constant int *a, constant int *b, global int *c)
{
	// Get the index of the current element to be processed (wavefront)
	//int i = get_global_id(0);  This is #defined as G0 in mawsh.cl

	// Do the operation
	c[G0] = a[G0] + b[G0];
}

// Colloquial goodbye.
void kernel bye(global mawproc* p)
{
	printmc(&p->out, "OK - Done adding.\n");
}
